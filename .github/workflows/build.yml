#name: Build
#
#on:
#  push:
#    branches:
#      - master
#
#
#jobs:
#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - uses: sonarsource/sonarqube-scan-action@master
#        env:
#          SONAR_TOKEN: sqp_f8db6b9815b873bbb04775ec228ee2003248091f
#          SONAR_HOST_URL: http://localhost:9000
#      # If you wish to fail your job when the Quality Gate is red, uncomment the
#      # following lines. This would typically be used to fail a deployment.
#      # - uses: sonarsource/sonarqube-quality-gate-action@master
#      #   timeout-minutes: 5
#      #   env:
#      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    branches: master
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: 6942ba1f6b715cd46e99b6254e76ca324a48f7f8
  build:
    runs-on: ubuntu-latest
    name: web-build-fe
    services:
      # How to use MySQL
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      # How to use Redis
      redis:
        image: redis
        ports:
          - 6379/tcp
    steps:
      - uses: actions/checkout@v3
      - name: Install Composer
        run: |
          composer install
      - name: Copy .env
        run: |
          cp .env.example .env
      - name: Generate App Key
        run: |
          php artisan key:generate
      - name: Migrate DB
        run: |
          php artisan migrate
      - name: Run Testsuite
        run: vendor/bin/phpunit tests/
